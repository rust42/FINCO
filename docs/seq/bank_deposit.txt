title Bank Deposit Sequence

actor Client

# init BankFrame and its required context and set bank frame visible
Bank->BankFrame:1.<<new>>
activate BankFrame
BankFrame->BankFrmController:2.<<new>>
activate BankFrmController
BankFrame<--BankFrmController:
deactivate BankFrmController

BankFrame->GenericJTableModel:3.<<new>>
activate GenericJTableModel
BankFrame<--GenericJTableModel:
deactivate GenericJTableModel
Bank<--BankFrame:
deactivate BankFrame

Bank->BankFrame:4.setVisible
activate BankFrame
Bank<--BankFrame:
deactivate BankFrame




Client->BankFrame:5.onDepositButtonClicked
activate BankFrame

BankFrame->GenericJDialog_Deposit:6.<<new>>
activate GenericJDialog_Deposit
BankFrame<--GenericJDialog_Deposit:
deactivate GenericJDialog_Deposit

BankFrame->GenericJDialog_Deposit:7.show
activate GenericJDialog_Deposit
BankFrame<--GenericJDialog_Deposit:
Client<--BankFrame:

deactivate GenericJDialog_Deposit
deactivate BankFrame


Client->BankFrame:8.input deposit amount
activate BankFrame


BankFrame->GenericJDialog_Deposit:9.getAmountDeposit
activate GenericJDialog_Deposit
space
deactivate BankFrame
deactivate GenericJDialog_Deposit
BankFrame<--GenericJDialog_Deposit:

activate BankFrame
participant BankAccTableModelResponse



BankFrame->BankController:10.deposit
activate BankController
deactivate BankFrame
BankController->AbstractAccountService:11.depositMoney
activate AbstractAccountService


AbstractAccountService->AbstractStorageService:12.getIAccountByUniqueId
activate AbstractStorageService

AbstractAccountService<--AbstractStorageService:BankAccount
deactivate AbstractStorageService


AbstractAccountService->BankAccount:13.setBalance
activate BankAccount
AbstractAccountService<--BankAccount:
deactivate BankAccount

AbstractAccountService->Entry:14.<<new>>
activate Entry
AbstractAccountService<--Entry:
deactivate Entry

AbstractAccountService->BankAccount:15.addEntry
activate BankAccount
AbstractAccountService<--BankAccount:
deactivate BankAccount


AbstractAccountService->AbstractStorageService:16.update
activate AbstractStorageService
AbstractAccountService<-AbstractStorageService:
deactivate AbstractStorageService


AbstractAccountService->BankAccount:17.notifyPartyOnTxEntry
activate BankAccount
AbstractAccountService<--BankAccount:
BankController<--AbstractAccountService:

deactivate BankAccount



deactivate AbstractAccountService


BankController->BankAccTableModelResponse:18.<<new>>
activate BankAccTableModelResponse

BankController<--BankAccTableModelResponse:
deactivate BankAccTableModelResponse

BankController->BankAccTableModelResponse:19.setAmount
activate BankAccTableModelResponse

BankController<--BankAccTableModelResponse:
deactivate BankAccTableModelResponse
activate BankFrame

BankFrame<--BankController:
deactivate BankController
BankFrame->GenericJTableModel:20.updateModel
activate GenericJTableModel
BankFrame<--GenericJTableModel:
deactivate GenericJTableModel
Client<--BankFrame:


deactivate BankFrame